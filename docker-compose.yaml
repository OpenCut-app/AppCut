services:
  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: opencut
      POSTGRES_PASSWORD: opencutthegoat
      POSTGRES_DB: opencut
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U opencut -d opencut"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  serverless-redis-http:
    image: hiett/serverless-redis-http:latest
    ports:
      - "8079:80"
    environment:
      SRH_MODE: env
      SRH_TOKEN: example_token
      SRH_CONNECTION_STRING: "redis://redis:6379"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://127.0.0.1:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  app:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # Database
      DATABASE_URL: "postgresql://opencut:opencutthegoat@db:5432/opencut"
      
      # Auth (you'll need to set these)
      BETTER_AUTH_SECRET: "your-secret-here"
      GOOGLE_CLIENT_ID: "your-google-client-id"
      GOOGLE_CLIENT_SECRET: "your-google-client-secret"
      
      # Redis for rate limiting
      UPSTASH_REDIS_REST_URL: "http://serverless-redis-http:80"
      UPSTASH_REDIS_REST_TOKEN: "example_token"
      
      NODE_ENV: "production"
    depends_on:
      db:
        condition: service_healthy
      serverless-redis-http:
        condition: service_healthy
    profiles:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
